ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"touch.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "HW/TOUCH/touch.c"
  18              		.section	.text.Touch_Init,"ax",%progbits
  19              		.align	1
  20              		.global	Touch_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	Touch_Init:
  26              	.LFB32:
   1:HW/TOUCH/touch.c **** /**
   2:HW/TOUCH/touch.c ****  * @file touch.c
   3:HW/TOUCH/touch.c ****  * @author 511844767
   4:HW/TOUCH/touch.c ****  * @brief 电阻触摸屏实验
   5:HW/TOUCH/touch.c ****  * @version 0.1
   6:HW/TOUCH/touch.c ****  * @date 2023-01-03
   7:HW/TOUCH/touch.c ****  * 
   8:HW/TOUCH/touch.c ****  * @copyright Copyright (c) 2023
   9:HW/TOUCH/touch.c ****  * 
  10:HW/TOUCH/touch.c ****  */
  11:HW/TOUCH/touch.c **** #include"stdio.h"
  12:HW/TOUCH/touch.c **** #include"stdlib.h"
  13:HW/TOUCH/touch.c **** #include"stm32f10x.h"
  14:HW/TOUCH/touch.c **** #include"stm32f10x_exti.h"
  15:HW/TOUCH/touch.c **** #include"gpio_spi.h"
  16:HW/TOUCH/touch.c **** #include"delay.h"
  17:HW/TOUCH/touch.c **** 
  18:HW/TOUCH/touch.c **** /**
  19:HW/TOUCH/touch.c ****  * @brief 触摸屏检测，触摸屏的时序比较特殊
  20:HW/TOUCH/touch.c ****  * 
  21:HW/TOUCH/touch.c ****  * @param cmd 
  22:HW/TOUCH/touch.c ****  * @return uint16_t 
  23:HW/TOUCH/touch.c ****  */
  24:HW/TOUCH/touch.c **** extern uint16_t GPIO_SPI_Touch_Func(uint8_t cmd);
  25:HW/TOUCH/touch.c **** 
  26:HW/TOUCH/touch.c **** void Touch_Init(){
  27              		.loc 1 26 18 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 2


  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  27:HW/TOUCH/touch.c ****     /* 初始化SPI引脚 */
  28:HW/TOUCH/touch.c ****     GPIO_SPI_Init();
  38              		.loc 1 28 5 view .LVU1
  39 0004 FFF7FEFF 		bl	GPIO_SPI_Init
  40              	.LVL0:
  29:HW/TOUCH/touch.c ****     /* 初始化Pen引脚(PF10) */
  30:HW/TOUCH/touch.c ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF, ENABLE);
  41              		.loc 1 30 5 view .LVU2
  42 0008 0121     		movs	r1, #1
  43 000a 8020     		movs	r0, #128
  44 000c FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  45              	.LVL1:
  31:HW/TOUCH/touch.c ****     GPIO_InitTypeDef gpioDef;
  46              		.loc 1 31 5 view .LVU3
  32:HW/TOUCH/touch.c ****     gpioDef.GPIO_Mode   = GPIO_Mode_IN_FLOATING;
  47              		.loc 1 32 5 view .LVU4
  48              		.loc 1 32 25 is_stmt 0 view .LVU5
  49 0010 0423     		movs	r3, #4
  50 0012 8DF80730 		strb	r3, [sp, #7]
  33:HW/TOUCH/touch.c ****     gpioDef.GPIO_Pin    = GPIO_Pin_10;
  51              		.loc 1 33 5 is_stmt 1 view .LVU6
  52              		.loc 1 33 25 is_stmt 0 view .LVU7
  53 0016 4FF48063 		mov	r3, #1024
  54 001a ADF80430 		strh	r3, [sp, #4]	@ movhi
  34:HW/TOUCH/touch.c ****     gpioDef.GPIO_Speed  = GPIO_Speed_50MHz;
  55              		.loc 1 34 5 is_stmt 1 view .LVU8
  56              		.loc 1 34 25 is_stmt 0 view .LVU9
  57 001e 0323     		movs	r3, #3
  58 0020 8DF80630 		strb	r3, [sp, #6]
  35:HW/TOUCH/touch.c ****     GPIO_Init(GPIOF, &gpioDef);
  59              		.loc 1 35 5 is_stmt 1 view .LVU10
  60 0024 01A9     		add	r1, sp, #4
  61 0026 0348     		ldr	r0, .L3
  62 0028 FFF7FEFF 		bl	GPIO_Init
  63              	.LVL2:
  36:HW/TOUCH/touch.c **** }
  64              		.loc 1 36 1 is_stmt 0 view .LVU11
  65 002c 03B0     		add	sp, sp, #12
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 4
  68              		@ sp needed
  69 002e 5DF804FB 		ldr	pc, [sp], #4
  70              	.L4:
  71 0032 00BF     		.align	2
  72              	.L3:
  73 0034 001C0140 		.word	1073814528
  74              		.cfi_endproc
  75              	.LFE32:
  77              		.section	.text.Touch_Scan,"ax",%progbits
  78              		.align	1
  79              		.global	Touch_Scan
  80              		.syntax unified
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 3


  81              		.thumb
  82              		.thumb_func
  84              	Touch_Scan:
  85              	.LVL3:
  86              	.LFB33:
  37:HW/TOUCH/touch.c **** 
  38:HW/TOUCH/touch.c **** typedef enum{
  39:HW/TOUCH/touch.c ****     Touch_State_Release = 0, 
  40:HW/TOUCH/touch.c ****     Touch_State_Waiting, 
  41:HW/TOUCH/touch.c ****     Touch_State_Pressed
  42:HW/TOUCH/touch.c **** } Touch_State_t;
  43:HW/TOUCH/touch.c **** 
  44:HW/TOUCH/touch.c **** /* 坐标可以看做定点数Q12表示 */
  45:HW/TOUCH/touch.c **** #define TOUCH_SHIFT 12
  46:HW/TOUCH/touch.c **** 
  47:HW/TOUCH/touch.c **** typedef struct{
  48:HW/TOUCH/touch.c ****     uint16_t x; 
  49:HW/TOUCH/touch.c ****     uint16_t y;
  50:HW/TOUCH/touch.c ****     Touch_State_t state;
  51:HW/TOUCH/touch.c **** } Touch_Info_t;
  52:HW/TOUCH/touch.c **** 
  53:HW/TOUCH/touch.c **** /* 状态机检测 */
  54:HW/TOUCH/touch.c **** Touch_Info_t Touch_Scan(){
  87              		.loc 1 54 26 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 54 26 is_stmt 0 view .LVU13
  92 0000 38B5     		push	{r3, r4, r5, lr}
  93              	.LCFI3:
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 3, -16
  96              		.cfi_offset 4, -12
  97              		.cfi_offset 5, -8
  98              		.cfi_offset 14, -4
  99 0002 0446     		mov	r4, r0
  55:HW/TOUCH/touch.c ****     static Touch_Info_t touchInfo = {0};
 100              		.loc 1 55 5 is_stmt 1 view .LVU14
  56:HW/TOUCH/touch.c ****     static uint8_t acc;
 101              		.loc 1 56 5 view .LVU15
  57:HW/TOUCH/touch.c **** 
  58:HW/TOUCH/touch.c ****     #define PEN (!GPIO_ReadInputDataBit(GPIOF, GPIO_Pin_10))
  59:HW/TOUCH/touch.c ****     #define READ_X() (4096 - GPIO_SPI_Touch_Func(0B11010000))
  60:HW/TOUCH/touch.c ****     #define READ_Y() (4096 - GPIO_SPI_Touch_Func(0B10010000))
  61:HW/TOUCH/touch.c **** 
  62:HW/TOUCH/touch.c ****     switch (touchInfo.state)
 102              		.loc 1 62 5 view .LVU16
 103              		.loc 1 62 22 is_stmt 0 view .LVU17
 104 0004 2C4B     		ldr	r3, .L14
 105 0006 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 106              		.loc 1 62 5 view .LVU18
 107 0008 012B     		cmp	r3, #1
 108 000a 18D0     		beq	.L6
 109 000c 022B     		cmp	r3, #2
 110 000e 39D0     		beq	.L7
 111 0010 33B1     		cbz	r3, .L12
 112              	.LVL4:
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 4


 113              	.L8:
  63:HW/TOUCH/touch.c ****     {
  64:HW/TOUCH/touch.c ****     case Touch_State_Release:
  65:HW/TOUCH/touch.c ****         if(PEN){
  66:HW/TOUCH/touch.c ****             ++acc;
  67:HW/TOUCH/touch.c ****             touchInfo.state = Touch_State_Waiting;
  68:HW/TOUCH/touch.c ****         }
  69:HW/TOUCH/touch.c ****         break;
  70:HW/TOUCH/touch.c ****     
  71:HW/TOUCH/touch.c ****     case Touch_State_Waiting:
  72:HW/TOUCH/touch.c ****         if(PEN){
  73:HW/TOUCH/touch.c ****             ++acc;
  74:HW/TOUCH/touch.c ****             if(acc >= 10){
  75:HW/TOUCH/touch.c ****                 touchInfo.x = READ_X();
  76:HW/TOUCH/touch.c ****                 touchInfo.y = READ_Y();
  77:HW/TOUCH/touch.c ****                 touchInfo.state = Touch_State_Pressed;
  78:HW/TOUCH/touch.c ****             }
  79:HW/TOUCH/touch.c ****         }else{
  80:HW/TOUCH/touch.c ****             acc = 0;
  81:HW/TOUCH/touch.c ****             touchInfo.state = Touch_State_Release;
  82:HW/TOUCH/touch.c ****         }
  83:HW/TOUCH/touch.c ****         break;
  84:HW/TOUCH/touch.c **** 
  85:HW/TOUCH/touch.c ****     case Touch_State_Pressed:
  86:HW/TOUCH/touch.c ****         if(PEN){
  87:HW/TOUCH/touch.c ****             touchInfo.x = READ_X();
  88:HW/TOUCH/touch.c ****             touchInfo.y = READ_Y();
  89:HW/TOUCH/touch.c ****         }else{
  90:HW/TOUCH/touch.c ****             touchInfo.state = Touch_State_Release;
  91:HW/TOUCH/touch.c ****             acc = 0;
  92:HW/TOUCH/touch.c ****         }
  93:HW/TOUCH/touch.c ****         break;
  94:HW/TOUCH/touch.c **** 
  95:HW/TOUCH/touch.c ****     default:    // not allowed
  96:HW/TOUCH/touch.c ****         break;
  97:HW/TOUCH/touch.c ****     }
  98:HW/TOUCH/touch.c **** 
  99:HW/TOUCH/touch.c ****     #undef PEN
 100:HW/TOUCH/touch.c ****     return touchInfo;
 114              		.loc 1 100 5 is_stmt 1 view .LVU19
 115              		.loc 1 100 12 is_stmt 0 view .LVU20
 116 0012 294B     		ldr	r3, .L14
 117 0014 1868     		ldr	r0, [r3]
 118 0016 2060     		str	r0, [r4]	@ unaligned
 119 0018 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 120 001a A380     		strh	r3, [r4, #4]	@ unaligned
 101:HW/TOUCH/touch.c **** }
 121              		.loc 1 101 1 view .LVU21
 122 001c 2046     		mov	r0, r4
 123 001e 38BD     		pop	{r3, r4, r5, pc}
 124              	.LVL5:
 125              	.L12:
  65:HW/TOUCH/touch.c ****             ++acc;
 126              		.loc 1 65 9 is_stmt 1 view .LVU22
  65:HW/TOUCH/touch.c ****             ++acc;
 127              		.loc 1 65 12 is_stmt 0 view .LVU23
 128 0020 4FF48061 		mov	r1, #1024
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 5


 129 0024 2548     		ldr	r0, .L14+4
 130              	.LVL6:
  65:HW/TOUCH/touch.c ****             ++acc;
 131              		.loc 1 65 12 view .LVU24
 132 0026 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 133              	.LVL7:
  65:HW/TOUCH/touch.c ****             ++acc;
 134              		.loc 1 65 11 view .LVU25
 135 002a 0028     		cmp	r0, #0
 136 002c F1D1     		bne	.L8
  66:HW/TOUCH/touch.c ****             touchInfo.state = Touch_State_Waiting;
 137              		.loc 1 66 13 is_stmt 1 view .LVU26
 138 002e 244A     		ldr	r2, .L14+8
 139 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 140 0032 0133     		adds	r3, r3, #1
 141 0034 1370     		strb	r3, [r2]
  67:HW/TOUCH/touch.c ****         }
 142              		.loc 1 67 13 view .LVU27
  67:HW/TOUCH/touch.c ****         }
 143              		.loc 1 67 29 is_stmt 0 view .LVU28
 144 0036 204B     		ldr	r3, .L14
 145 0038 0122     		movs	r2, #1
 146 003a 1A71     		strb	r2, [r3, #4]
 147 003c E9E7     		b	.L8
 148              	.LVL8:
 149              	.L6:
  72:HW/TOUCH/touch.c ****             ++acc;
 150              		.loc 1 72 9 is_stmt 1 view .LVU29
  72:HW/TOUCH/touch.c ****             ++acc;
 151              		.loc 1 72 12 is_stmt 0 view .LVU30
 152 003e 4FF48061 		mov	r1, #1024
 153 0042 1E48     		ldr	r0, .L14+4
 154              	.LVL9:
  72:HW/TOUCH/touch.c ****             ++acc;
 155              		.loc 1 72 12 view .LVU31
 156 0044 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 157              	.LVL10:
  72:HW/TOUCH/touch.c ****             ++acc;
 158              		.loc 1 72 11 view .LVU32
 159 0048 B0B9     		cbnz	r0, .L9
  73:HW/TOUCH/touch.c ****             if(acc >= 10){
 160              		.loc 1 73 13 is_stmt 1 view .LVU33
 161 004a 1D4A     		ldr	r2, .L14+8
 162 004c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 163 004e 0133     		adds	r3, r3, #1
 164 0050 DBB2     		uxtb	r3, r3
 165 0052 1370     		strb	r3, [r2]
  74:HW/TOUCH/touch.c ****                 touchInfo.x = READ_X();
 166              		.loc 1 74 13 view .LVU34
  74:HW/TOUCH/touch.c ****                 touchInfo.x = READ_X();
 167              		.loc 1 74 15 is_stmt 0 view .LVU35
 168 0054 092B     		cmp	r3, #9
 169 0056 DCD9     		bls	.L8
  75:HW/TOUCH/touch.c ****                 touchInfo.y = READ_Y();
 170              		.loc 1 75 17 is_stmt 1 view .LVU36
  75:HW/TOUCH/touch.c ****                 touchInfo.y = READ_Y();
 171              		.loc 1 75 31 is_stmt 0 view .LVU37
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 6


 172 0058 D020     		movs	r0, #208
 173 005a FFF7FEFF 		bl	GPIO_SPI_Touch_Func
 174              	.LVL11:
 175 005e C0F58050 		rsb	r0, r0, #4096
  75:HW/TOUCH/touch.c ****                 touchInfo.y = READ_Y();
 176              		.loc 1 75 29 view .LVU38
 177 0062 154D     		ldr	r5, .L14
 178 0064 2880     		strh	r0, [r5]	@ movhi
  76:HW/TOUCH/touch.c ****                 touchInfo.state = Touch_State_Pressed;
 179              		.loc 1 76 17 is_stmt 1 view .LVU39
  76:HW/TOUCH/touch.c ****                 touchInfo.state = Touch_State_Pressed;
 180              		.loc 1 76 31 is_stmt 0 view .LVU40
 181 0066 9020     		movs	r0, #144
 182 0068 FFF7FEFF 		bl	GPIO_SPI_Touch_Func
 183              	.LVL12:
 184 006c C0F58050 		rsb	r0, r0, #4096
  76:HW/TOUCH/touch.c ****                 touchInfo.state = Touch_State_Pressed;
 185              		.loc 1 76 29 view .LVU41
 186 0070 6880     		strh	r0, [r5, #2]	@ movhi
  77:HW/TOUCH/touch.c ****             }
 187              		.loc 1 77 17 is_stmt 1 view .LVU42
  77:HW/TOUCH/touch.c ****             }
 188              		.loc 1 77 33 is_stmt 0 view .LVU43
 189 0072 0223     		movs	r3, #2
 190 0074 2B71     		strb	r3, [r5, #4]
 191 0076 CCE7     		b	.L8
 192              	.L9:
  80:HW/TOUCH/touch.c ****             touchInfo.state = Touch_State_Release;
 193              		.loc 1 80 13 is_stmt 1 view .LVU44
  80:HW/TOUCH/touch.c ****             touchInfo.state = Touch_State_Release;
 194              		.loc 1 80 17 is_stmt 0 view .LVU45
 195 0078 0023     		movs	r3, #0
 196 007a 114A     		ldr	r2, .L14+8
 197 007c 1370     		strb	r3, [r2]
  81:HW/TOUCH/touch.c ****         }
 198              		.loc 1 81 13 is_stmt 1 view .LVU46
  81:HW/TOUCH/touch.c ****         }
 199              		.loc 1 81 29 is_stmt 0 view .LVU47
 200 007e 0E4A     		ldr	r2, .L14
 201 0080 1371     		strb	r3, [r2, #4]
 202 0082 C6E7     		b	.L8
 203              	.LVL13:
 204              	.L7:
  86:HW/TOUCH/touch.c ****             touchInfo.x = READ_X();
 205              		.loc 1 86 9 is_stmt 1 view .LVU48
  86:HW/TOUCH/touch.c ****             touchInfo.x = READ_X();
 206              		.loc 1 86 12 is_stmt 0 view .LVU49
 207 0084 4FF48061 		mov	r1, #1024
 208 0088 0C48     		ldr	r0, .L14+4
 209              	.LVL14:
  86:HW/TOUCH/touch.c ****             touchInfo.x = READ_X();
 210              		.loc 1 86 12 view .LVU50
 211 008a FFF7FEFF 		bl	GPIO_ReadInputDataBit
 212              	.LVL15:
  86:HW/TOUCH/touch.c ****             touchInfo.x = READ_X();
 213              		.loc 1 86 11 view .LVU51
 214 008e 28B1     		cbz	r0, .L13
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 7


  90:HW/TOUCH/touch.c ****             acc = 0;
 215              		.loc 1 90 13 is_stmt 1 view .LVU52
  90:HW/TOUCH/touch.c ****             acc = 0;
 216              		.loc 1 90 29 is_stmt 0 view .LVU53
 217 0090 0023     		movs	r3, #0
 218 0092 094A     		ldr	r2, .L14
 219 0094 1371     		strb	r3, [r2, #4]
  91:HW/TOUCH/touch.c ****         }
 220              		.loc 1 91 13 is_stmt 1 view .LVU54
  91:HW/TOUCH/touch.c ****         }
 221              		.loc 1 91 17 is_stmt 0 view .LVU55
 222 0096 0A4A     		ldr	r2, .L14+8
 223 0098 1370     		strb	r3, [r2]
 224 009a BAE7     		b	.L8
 225              	.L13:
  87:HW/TOUCH/touch.c ****             touchInfo.y = READ_Y();
 226              		.loc 1 87 13 is_stmt 1 view .LVU56
  87:HW/TOUCH/touch.c ****             touchInfo.y = READ_Y();
 227              		.loc 1 87 27 is_stmt 0 view .LVU57
 228 009c D020     		movs	r0, #208
 229 009e FFF7FEFF 		bl	GPIO_SPI_Touch_Func
 230              	.LVL16:
 231 00a2 C0F58050 		rsb	r0, r0, #4096
  87:HW/TOUCH/touch.c ****             touchInfo.y = READ_Y();
 232              		.loc 1 87 25 view .LVU58
 233 00a6 044D     		ldr	r5, .L14
 234 00a8 2880     		strh	r0, [r5]	@ movhi
  88:HW/TOUCH/touch.c ****         }else{
 235              		.loc 1 88 13 is_stmt 1 view .LVU59
  88:HW/TOUCH/touch.c ****         }else{
 236              		.loc 1 88 27 is_stmt 0 view .LVU60
 237 00aa 9020     		movs	r0, #144
 238 00ac FFF7FEFF 		bl	GPIO_SPI_Touch_Func
 239              	.LVL17:
 240 00b0 C0F58050 		rsb	r0, r0, #4096
  88:HW/TOUCH/touch.c ****         }else{
 241              		.loc 1 88 25 view .LVU61
 242 00b4 6880     		strh	r0, [r5, #2]	@ movhi
 243 00b6 ACE7     		b	.L8
 244              	.L15:
 245              		.align	2
 246              	.L14:
 247 00b8 00000000 		.word	touchInfo.1
 248 00bc 001C0140 		.word	1073814528
 249 00c0 00000000 		.word	acc.0
 250              		.cfi_endproc
 251              	.LFE33:
 253              		.section	.rodata.Touch_Run.str1.4,"aMS",%progbits,1
 254              		.align	2
 255              	.LC0:
 256 0000 78203D20 		.ascii	"x = %d\011y = %d\015\012\000"
 256      25640979 
 256      203D2025 
 256      640D0A00 
 257              		.section	.text.Touch_Run,"ax",%progbits
 258              		.align	1
 259              		.global	Touch_Run
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 8


 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 264              	Touch_Run:
 265              	.LFB34:
 102:HW/TOUCH/touch.c **** 
 103:HW/TOUCH/touch.c **** extern void USART1_Init();
 104:HW/TOUCH/touch.c **** 
 105:HW/TOUCH/touch.c **** void Touch_Run(){
 266              		.loc 1 105 17 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ Volatile: function does not return.
 269              		@ args = 0, pretend = 0, frame = 8
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 00B5     		push	{lr}
 272              	.LCFI4:
 273              		.cfi_def_cfa_offset 4
 274              		.cfi_offset 14, -4
 275 0002 83B0     		sub	sp, sp, #12
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 16
 106:HW/TOUCH/touch.c ****     /* 初始化 */
 107:HW/TOUCH/touch.c ****     USART1_Init();
 278              		.loc 1 107 5 view .LVU63
 279 0004 FFF7FEFF 		bl	USART1_Init
 280              	.LVL18:
 108:HW/TOUCH/touch.c ****     delay_init();
 281              		.loc 1 108 5 view .LVU64
 282 0008 FFF7FEFF 		bl	delay_init
 283              	.LVL19:
 109:HW/TOUCH/touch.c ****     Touch_Init();
 284              		.loc 1 109 5 view .LVU65
 285 000c FFF7FEFF 		bl	Touch_Init
 286              	.LVL20:
 287 0010 09E0     		b	.L18
 288              	.L20:
 110:HW/TOUCH/touch.c **** 
 111:HW/TOUCH/touch.c ****     /* 检测 */
 112:HW/TOUCH/touch.c ****     Touch_Info_t touchInfo;
 113:HW/TOUCH/touch.c ****     while(1){
 114:HW/TOUCH/touch.c ****         touchInfo = Touch_Scan();
 115:HW/TOUCH/touch.c ****         if(touchInfo.state == Touch_State_Pressed){
 116:HW/TOUCH/touch.c ****             printf("x = %d\ty = %d\r\n", touchInfo.x, touchInfo.y);
 289              		.loc 1 116 13 view .LVU66
 290 0012 BDF80220 		ldrh	r2, [sp, #2]
 291 0016 BDF80010 		ldrh	r1, [sp]
 292 001a 0748     		ldr	r0, .L21
 293 001c FFF7FEFF 		bl	printf
 294              	.LVL21:
 295              	.L17:
 117:HW/TOUCH/touch.c ****         }
 118:HW/TOUCH/touch.c ****         delay_ms(5);
 296              		.loc 1 118 9 view .LVU67
 297 0020 0520     		movs	r0, #5
 298 0022 FFF7FEFF 		bl	delay_ms
 299              	.LVL22:
 113:HW/TOUCH/touch.c ****         touchInfo = Touch_Scan();
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 9


 300              		.loc 1 113 10 view .LVU68
 301              	.L18:
 112:HW/TOUCH/touch.c ****     while(1){
 302              		.loc 1 112 5 view .LVU69
 113:HW/TOUCH/touch.c ****         touchInfo = Touch_Scan();
 303              		.loc 1 113 5 view .LVU70
 114:HW/TOUCH/touch.c ****         if(touchInfo.state == Touch_State_Pressed){
 304              		.loc 1 114 9 view .LVU71
 114:HW/TOUCH/touch.c ****         if(touchInfo.state == Touch_State_Pressed){
 305              		.loc 1 114 21 is_stmt 0 view .LVU72
 306 0026 6846     		mov	r0, sp
 307 0028 FFF7FEFF 		bl	Touch_Scan
 308              	.LVL23:
 115:HW/TOUCH/touch.c ****             printf("x = %d\ty = %d\r\n", touchInfo.x, touchInfo.y);
 309              		.loc 1 115 9 is_stmt 1 view .LVU73
 115:HW/TOUCH/touch.c ****             printf("x = %d\ty = %d\r\n", touchInfo.x, touchInfo.y);
 310              		.loc 1 115 21 is_stmt 0 view .LVU74
 311 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 115:HW/TOUCH/touch.c ****             printf("x = %d\ty = %d\r\n", touchInfo.x, touchInfo.y);
 312              		.loc 1 115 11 view .LVU75
 313 0030 022B     		cmp	r3, #2
 314 0032 EED0     		beq	.L20
 315 0034 F4E7     		b	.L17
 316              	.L22:
 317 0036 00BF     		.align	2
 318              	.L21:
 319 0038 00000000 		.word	.LC0
 320              		.cfi_endproc
 321              	.LFE34:
 323              		.section	.bss.acc.0,"aw",%nobits
 326              	acc.0:
 327 0000 00       		.space	1
 328              		.section	.bss.touchInfo.1,"aw",%nobits
 329              		.align	2
 332              	touchInfo.1:
 333 0000 00000000 		.space	6
 333      0000
 334              		.text
 335              	.Letext0:
 336              		.file 2 "e:\\windows\\programs\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-i686-arm-none-eabi\\
 337              		.file 3 "e:\\windows\\programs\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-i686-arm-none-eabi\\
 338              		.file 4 "USER/stm32f10x.h"
 339              		.file 5 "STM32F10x_FWLib/inc/stm32f10x_gpio.h"
 340              		.file 6 "e:\\windows\\programs\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-i686-arm-none-eabi\\
 341              		.file 7 "SYSTEM/delay/delay.h"
 342              		.file 8 "STM32F10x_FWLib/inc/stm32f10x_rcc.h"
 343              		.file 9 "HW/TOUCH/gpio_spi.h"
ARM GAS  C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 touch.c
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:19     .text.Touch_Init:00000000 $t
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:25     .text.Touch_Init:00000000 Touch_Init
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:73     .text.Touch_Init:00000034 $d
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:78     .text.Touch_Scan:00000000 $t
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:84     .text.Touch_Scan:00000000 Touch_Scan
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:247    .text.Touch_Scan:000000b8 $d
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:332    .bss.touchInfo.1:00000000 touchInfo.1
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:326    .bss.acc.0:00000000 acc.0
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:254    .rodata.Touch_Run.str1.4:00000000 $d
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:258    .text.Touch_Run:00000000 $t
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:264    .text.Touch_Run:00000000 Touch_Run
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:319    .text.Touch_Run:00000038 $d
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:327    .bss.acc.0:00000000 $d
C:\Users\86157\AppData\Local\Temp\ccNNXPlA.s:329    .bss.touchInfo.1:00000000 $d

UNDEFINED SYMBOLS
GPIO_SPI_Init
RCC_APB2PeriphClockCmd
GPIO_Init
GPIO_ReadInputDataBit
GPIO_SPI_Touch_Func
USART1_Init
delay_init
printf
delay_ms
